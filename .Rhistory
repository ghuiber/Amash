x.high <- setx(z.out, educate = 16, age = age.range)
s.out <- sim(z.out, x = x.low, x1 = x.high)
plot.ci(s.out, xlab = "Age in Years",
ylab = "Predicted Probability of Voting",
main = "Effect of Education and Age on Voting Behavior")
legend(45, 0.52, legend = c("College Education (16 years)",
"High School Education (12 years)"), col = c("blue","red"),
lty = c("solid"))
help('plot.ci')
data(turnout)
z.out <- zelig(vote ~ race + educate + age + I(age^2) + income,
model = "logit", data = turnout)
age.range <- 18:95
x.low <- setx(z.out, educate = 12, age = age.range)
x.high <- setx(z.out, educate = 16, age = age.range)
s.out <- sim(z.out, x = x.low, x1 = x.high)
plot.ci(s.out, var=age, xlab = "Age in Years",
ylab = "Predicted Probability of Voting",
main = "Effect of Education and Age on Voting Behavior")
legend(45, 0.52, legend = c("College Education (16 years)",
"High School Education (12 years)"), col = c("blue","red"),
lty = c("solid"))
data(turnout)
z.out <- zelig(vote ~ race + educate + age + I(age^2) + income,
model = "logit", data = turnout)
age.range <- 18:95
x.low <- setx(z.out, educate = 12, age = age.range)
x.high <- setx(z.out, educate = 16, age = age.range)
s.out <- sim(z.out, x = x.low, x1 = x.high)
plot.ci(s.out, var=turnout$age, xlab = "Age in Years",
ylab = "Predicted Probability of Voting",
main = "Effect of Education and Age on Voting Behavior")
legend(45, 0.52, legend = c("College Education (16 years)",
"High School Education (12 years)"), col = c("blue","red"),
lty = c("solid"))
source('~/SpiderOak Hive/Amash/amash.R')
sim(z.out,x=x.D)
sim(z.out,x=x.D,x1=x.R)
summary(sim(z.out,x=x.D,x1=x.R))
summary(sim(z.out,x=x.R,x1=x.D))
str(summary(sim(z.out,x=x.R,x1=x.D)))
str(summary(sim(z.out,x=x.R,x1=x.D)))
summary(sim(z.out,x=x.R,x1=x.D))
contrasts(df$Vote)
names(summary(sim(z.out,x=x.R,x1=x.D)))
names(summary(sim(z.out,x=x.R,x1=x.D))[['stats']])
names(summary(sim(z.out,x=x.R,x1=x.D))[['stats']][[1]])
names(summary(sim(z.out,x=x.R,x1=x.D))[['stats']][[1]][[2]])
summary(sim(z.out,x=x.R,x1=x.D))[['stats']][[1]][[2]]
summary(sim(z.out,x=x.R,x1=x.D))[['stats']][["Party=R, Amount=0"]][[2]]
summary(sim(z.out,x=x.R,x1=x.D))[['stats']][["Party=R, Amount=10000"]][[2]]
summary(sim(z.out,x=x.R,x1=x.D))[['stats']][[2]][[2]]
summary(sim(z.out,x=x.R,x1=x.D))[['stats']][[2]][[1]]
source('~/SpiderOak Hive/Amash/amash.R')
summary(s.D)
p.D
source('~/SpiderOak Hive/Amash/amash.R')
summary(s.D)
p.D
p.R
plot(p.R[,7],seq(0,100000,10000))
plot(p.R[,7]~seq(0,100000,10000))
lines(p.D[,7]~seq(0,100000,10000))
plot(p.D[,7]~seq(0,100000,10000))
lines(p.R[,7]~seq(0,100000,10000))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding')
leg.txt <- c("Setosa     Petals", "Setosa     Sepals",
"Versicolor Petals", "Versicolor Sepals")
y.leg <- c(4.5, 3, 2.1, 1.4, .7)
cexv  <- c(1.2, 1, 4/5, 2/3, 1/2)
matplot(c(1,8), c(0,4.5), type = "n", xlab = "Length", ylab = "Width",
main = "Petal and Sepal Dimensions in Iris Blossoms")
for (i in seq(cexv)) {
text  (1, y.leg[i]-.1, paste("cex=",formatC(cexv[i])), cex=.8, adj = 0)
legend(3, y.leg[i], leg.txt, pch = "sSvV", col = c(1, 3), cex = cexv[i])
}
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(3,4))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(3,5))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(1,2))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(1,3))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(1,5))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(1,4))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(2,4))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2))
axis(1,at=pretty(x),labels=chartr(".", ",", as.character(pretty(x))))
axis(1,at=pretty(seq(0,100000,10000)),labels=chartr(".", ",", as.character(pretty(seq(0,100000,10000)))))
axis(1,at=pretty(seq(0,100000,50000)),labels=chartr(".", ",", as.character(pretty(seq(0,100000,50000)))))
plot.new()
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2))
axis(1,at=pretty(seq(0,100000,50000)),labels=chartr(".", ",", as.character(pretty(seq(0,100000,50000)))))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),axis(1,NULL))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxis=FALSE)
axis(1,at=pretty(seq(0,100000,50000)),labels=chartr(".", ",", as.character(pretty(seq(0,100000,50000)))))
source('~/.active-rstudio-document')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxis=FALSE)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),axes=FALSE)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxis=FALSE)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=pretty(seq(0,100000,50000)),labels=chartr(".", ",", as.character(pretty(seq(0,100000,50000)))))
pretty(seq(0,100000,20000))
chartr(".", ",", as.character(pretty(seq(0,100000,20000))))
prettyNum(seq(0,100000,20000))
format(seq(0,100000,20000),big.mark=',')
format(seq(0,100000,20000),digits=6,big.mark=',')
prettyNum(seq(0,100000,20000),big.mark=',')
prettyNum(seq(0,100000,20000),big.mark=',',digits=6)
prettyNum(seq(0,100000,20000),big.mark=',',digits=7)
prettyNum(seq(0,100000,20000),big.mark=',',digits=8)
prettyNum(seq(0,100000,20000),big.mark=',',digits=9)
prettyNum(seq(0,100000,20000),big.mark=',',width>0)
prettyNum(seq(0,100000,20000),big.mark=',',digits=7,width=digits+1)
prettyNum(seq(0,100000,20000),big.mark=',',digits=7)
prettyNum(seq(0,100000,20000),big.mark=',',digits=7,format='d')
prettyNum(seq(0,100000,20000),big.mark=',',digits=7,format='fg')
prettyNum(seq(0,100000,20000),big.mark=',',digits=8,format='fg')
prettyNum(seq(0,80000,20000),big.mark=',',digits=8,format='fg')
prettyNum(seq(0,80000,20000),big.mark=',')
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=pretty(seq(0,100000,20000)),labels=prettyNum(seq(0,80000,20000),big.mark=','))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=pretty(seq(0,80000,20000)),labels=prettyNum(seq(0,80000,20000),big.mark=','))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=pretty(seq(20000,80000,40000)),labels=prettyNum(seq(20000,80000,40000),big.mark=','))
pretty(seq(20000,80000,40000))
pretty(seq(20000,80000,20000))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=pretty(seq(20000,80000,20000)),labels=prettyNum(seq(20000,80000,20000),big.mark=','))
prettyNum(seq(20000,80000,20000))
prettyNum(seq(20000,80000,40000))
seq(20000,80000,20000)
prettyNum(seq(20000,80000,40000))
prettyNum(seq(20000,80000,20000))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=seq(20000,80000,20000),labels=prettyNum(seq(20000,80000,20000),big.mark=','))
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=seq(20000,80000,20000),labels=prettyNum(seq(20000,80000,20000),big.mark=','),cex=.5)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=seq(20000,80000,20000),labels=prettyNum(seq(20000,80000,20000),big.mark=','),cex=.35)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=seq(0,100000,20000),labels=prettyNum(seq(0,100000,20000),big.mark=','),cex=.35)
matplot(seq(0,100000,10000),cbind(p.D[,7],p.R[,7]),type='l', ylab='Predicted P(No)',xlab='Security industry funding',col=c(4,2),xaxt='none')
axis(1,at=seq(0,100000,20000),labels=prettyNum(seq(0,100000,20000),big.mark=','),cex.axis=.5)
source('~/.active-rstudio-document')
p.D
p.No <- as.data.frame(rbind(p.D[,c(1,7)],p.R[,c(1,7)]))
head(p.No)
p.No <- as.data.frame(rbind(p.D[,7],p.R[,7]))
head(p.No)
View(p.No)
p.No <- as.data.frame(cbind(p.D[,7],p.R[,7]))
View(p.No)
rbind(p.R[,7],p.D[,7])
t(rbind(p.R[,7],p.D[,7]))
t(cbind(p.R[,7],p.D[,7]))
cbind(p.R[,7],p.D[,7])
rbind(p.R[,c(6,7)],p.D[,c(6,7)])
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
p.No$group <- rownames(p.No)
View(p.No)
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
p.No$group  <- rownames(p.No)
names(p.No) <- c('Yes','No','Group')
p.No <- p.No[,c('Group','Yes','No')]
View(p.No)
p.No$Amount <- gsub("^P*=","",p.No$Group)
View(p.No)
p.No$Amount <- gsub("^P*=","",p.No$Group,perl=T)
View(p.No)
p.No$Amount <- gsub("^P.*=","",p.No$Group,perl=T)
View(p.No)
gsub("(Party=|,.*","",p.No$Group,perl=T)
gsub("(Party=|,.*)","",p.No$Group,perl=T)
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
p.No$group  <- rownames(p.No)
names(p.No) <- c('Yes','No','Group')
p.No$Amount <- as.numeric(gsub("^P.*=","",p.No$Group,perl=T))
p.No$Party  <- gsub("(Party=|,.*)","",p.No$Group,perl=T)
p.No <- p.No[,c('Party','Amount','Yes','No')]
View(p.No)
ggplot(data=p.No, aes(x=Amount, y=No, group=Party)) + geom_line()
library("ggplot2", lib.loc="/Users/ghuiber/Rlibs")
ggplot(data=p.No, aes(x=Amount, y=No, group=Party)) + geom_line()
source('~/SpiderOak Hive/Amash/amash.R')
source('~/SpiderOak Hive/Amash/amash.R')
ggplot(data=p.No, aes(x=Amount, y=No, group=Party, color=Party)) + geom_line()
source('~/SpiderOak Hive/Amash/amash.R')
pic
source('~/SpiderOak Hive/Amash/amash.R')
pic
source('~/SpiderOak Hive/Amash/amash.R')
pic
source('~/SpiderOak Hive/Amash/amash.R')
pic
getwd()
head(df)
sum(df$Amount)
sum(df$Amount)/nrow(df)*50000
sum(df$Amount)/(nrow(df)*50000)
print(prettyNum(sum(df$Amount),big.mark=','))
print(nrow(df)*50000,big.mark=','))
print(prettyNum(nrow(df)*50000,big.mark=','))
print(prettyNum(nrow(df)*40000,big.mark=','))
print(prettyNum(nrow(df)*30000,big.mark=','))
head(p.No)
mean(p.No$Yes)
mean(p.No$Yes[p.No$Amount=30000])
mean(p.No$Yes[p.No$Amount==30000])
mean(p.No$No[p.No$Amount==30000])
prettyNum(sum(df$Amount),big.mark=',')
nrow(df)
p.No$Yes[p.No$Amount==30000]
mean(p.No$Yo[p.No$Amount==30000])
mean(p.No$No[p.No$Amount==30000])
table(df$Party)
mean(p.No$No[p.No$Amount==30000])
p.No$No[p.No$Amount==30000]
p.No$No[p.No$Amount==30000]*table(df$Party)
sum(p.No$No[p.No$Amount==30000]*table(df$Party))/sum((table(df$Party)))
sum(p.No$Yes[p.No$Amount==30000]*table(df$Party))/sum((table(df$Party)))
p.No$Yes[p.No$Amount==30000]
p.No$No[p.No$Amount==30000]
head(p.No)
rownames(p.No$No[p.No$Amount==30000])
rownames(p.No[p.No$Amount==30000,])
subset(p.No,Amount==30000)
table(df$Party)
subset(p.No,Amount==30000)[,c('Yes','No')]
nrow(df)*5000
prettyNum(nrow(df)*40000,big.mark=',')
um(p.No$Yes[p.No$Amount==40000]*table(df$Party))/sum((table(df$Party)))
sum(p.No$Yes[p.No$Amount==40000]*table(df$Party))/sum((table(df$Party)))
sum(p.No$No[p.No$Amount==40000]*table(df$Party))/sum((table(df$Party)))
nrow(df)*5000/sum(df$Amount)
subset(p.No,Amount==40000)
subset(p.No,Amount==20000)
mean(df$Amount[df$Party=='D'])
mean(df$Amount[df$Party=='R'])
nrow(df[Df$Party=='D',])
nrow(df[df$Party=='D',])
D.paid <- mean(df$Amount[df$Party=='D'])
R.paid <- mean(df$Amount[df$Party=='R'])
D.ct   <- nrow(df[df$Party=='D',])
R.ct   <- nrow(df[df$Party=='R',])
rbind(c(D.paid,D.ct),c(R.paid,R.ct))
rbind(c(D.paid,D.ct),c(R.paid,R.ct),colnames=c('Paid','Members'))
foo <- rbind(c(D.paid,D.ct),c(R.paid,R.ct))
foo
colnames(foo) <- c('Dollars per head','Representatives')
foo
print(prettyNum(foo))
print(format(foo,big.mark=','))
print(format(foo,big.mark=','), quote=F)
print(format(foo,big.mark=',',digits=0), quote=F)
print(format(foo,big.mark=',',digits=1), quote=F)
194*55000+228*15,000
194*55000+228*15000
194*50000+228*10000
194*40000+228*10000
collectPredictedValues <- function(zs) {
rnames    <- names(summary(zs)[['stats']])
expected  <- NULL
predicted <- NULL
for(i in rnames) {
expected  <- rbind(expected,summary(zs)[['stats']][[i]][[1]])
predicted <- rbind(predicted,summary(zs)[['stats']][[i]][[2]])
}
c <- cbind(expected,predicted)
rownames(c) <- rnames
return(c)
}
getSims <- function(m) {
p.D <- collectPredictedValues(m[['s.D']])
p.R <- collectPredictedValues(m[['s.R']])
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
return(p.No)
}
drawPic <- function(m,mname) {
p.No <- getSims(m)
p.No$group  <- rownames(p.No)
names(p.No) <- c('Yes','No','Group')
p.No$Amount <- as.numeric(gsub("^P.*=","",p.No$Group,perl=T))
p.No$Party  <- gsub("(Party=|,.*)","",p.No$Group,perl=T)
p.No <- p.No[,c('Party','Amount','Yes','No')]
pic <- ggplot(data=p.No, aes(x=Amount, y=No, group=Party, color=Party)) + geom_line() + xlab('Funding from security and defense industry') + ylab('Predicted P(votes No)') + ggtitle(paste('Predicted probability of a No vote by party,',mname,sep=' '))
return(pic)
}
pic1 <- drawPic(m1,'Model 1')
pic2 <- drawPic(m2,'Model 2')
p1.No <- getSims(m1)
p2.No <- getSims(m2)
z1.out <- zelig(Vote ~ Party + Amount, data=df, model="logit", cite=FALSE)
z2.out <- zelig(Vote ~ Party + Amount + Party*Amount, data=df, model="logit", cite=FALSE)
getSims <- function(z.out) {
x.R <- setx(z.out,Party='R',Amount=seq(0,200000,10000))
x.D <- setx(z.out,Party='D',Amount=seq(0,200000,10000))
s.out <- sim(z.out,x=x.D,x1=x.R)
s.D <- sim(z.out,x=x.D,x1=x.R)
s.R <- sim(z.out,x=x.R,x1=x.D)
c <- list(x.R,x.D,s.out,s.D,s.R)
names(c) <- c('x.R','x.D','s.out','s.D','s.R')
return(c)
}
m1 <- getSims(z1.out)
m2 <- getSims(z2.out)
# Collect predicted values from a Zelig sim() object
collectPredictedValues <- function(zs) {
rnames    <- names(summary(zs)[['stats']])
expected  <- NULL
predicted <- NULL
for(i in rnames) {
expected  <- rbind(expected,summary(zs)[['stats']][[i]][[1]])
predicted <- rbind(predicted,summary(zs)[['stats']][[i]][[2]])
}
c <- cbind(expected,predicted)
rownames(c) <- rnames
return(c)
}
getSims <- function(m) {
p.D <- collectPredictedValues(m[['s.D']])
p.R <- collectPredictedValues(m[['s.R']])
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
return(p.No)
}
drawPic <- function(m,mname) {
p.No <- getSims(m)
p.No$group  <- rownames(p.No)
names(p.No) <- c('Yes','No','Group')
p.No$Amount <- as.numeric(gsub("^P.*=","",p.No$Group,perl=T))
p.No$Party  <- gsub("(Party=|,.*)","",p.No$Group,perl=T)
p.No <- p.No[,c('Party','Amount','Yes','No')]
pic <- ggplot(data=p.No, aes(x=Amount, y=No, group=Party, color=Party)) + geom_line() + xlab('Funding from security and defense industry') + ylab('Predicted P(votes No)') + ggtitle(paste('Predicted probability of a No vote by party,',mname,sep=' '))
return(pic)
}
pic1 <- drawPic(m1,'Model 1')
pic2 <- drawPic(m2,'Model 2')
p1.No <- getSims(m1)
p2.No <- getSims(m2)
p1.No
p2.No
collectPredictedValues <- function(zs) {
rnames    <- names(summary(zs)[['stats']])
expected  <- NULL
predicted <- NULL
for(i in rnames) {
expected  <- rbind(expected,summary(zs)[['stats']][[i]][[1]])
predicted <- rbind(predicted,summary(zs)[['stats']][[i]][[2]])
}
c <- cbind(expected,predicted)
rownames(c) <- rnames
return(c)
}
getSims <- function(m) {
p.D <- collectPredictedValues(m[['s.D']])
p.R <- collectPredictedValues(m[['s.R']])
p.No <- as.data.frame(rbind(p.R[,c(6,7)],p.D[,c(6,7)]))
p.No$group  <- rownames(p.No)
names(p.No) <- c('Yes','No','Group')
p.No$Amount <- as.numeric(gsub("^P.*=","",p.No$Group,perl=T))
p.No$Party  <- gsub("(Party=|,.*)","",p.No$Group,perl=T)
p.No <- p.No[,c('Party','Amount','Yes','No')]
return(p.No)
}
drawPic <- function(m,mname) {
p.No <- getSims(m)
pic <- ggplot(data=p.No, aes(x=Amount, y=No, group=Party, color=Party)) + geom_line() + xlab('Funding from security and defense industry') + ylab('Predicted P(votes No)') + ggtitle(paste('Predicted probability of a No vote by party,',mname,sep=' '))
return(pic)
}
pic1 <- drawPic(m1,'Model 1')
pic2 <- drawPic(m2,'Model 2')
p1.No <- getSims(m1)
p2.No <- getSims(m2)
p1.No
head(p2.No)
head(p1.No)
subset(p1.No,Amount==30000)[,c('Yes','No')]
subset(p2.No,Amount==30000)[,c('Yes','No')]
prettyNum(194*40000+228*10000)
prettyNum(194*40000+228*10000, big.mark=',')
prettyNum(nrow(df[df$Party=='D'])*40000+nrow(df[df$Party=='R'])*10000, big.mark=',')
prettyNum(nrow(df[df$Party=='D',])*40000+nrow(df[df$Party=='R',])*10000, big.mark=',')
names(s.D)
names(m1)
names(s.out)
s.out[[1]]
names(s.out[[1]])
names(s.out[[1]][['stats']])
s.out[[1]][['stats']]
s.D[[1]][['stats']]
p.D
source('~/SpiderOak Hive/Amash/amash.R')
p.D <- collectPredictedValues(m1[['s.D']])
head(p.D)
p.R <- collectPredictedValues(m[['s.R']])
p.R <- collectPredictedValues(m1[['s.R']])
p.No <- as.data.frame(rbind(p.R[,c(4,5)],p.D[,c(4,5)]))
head(p.No)
tail(p.No)
source('~/SpiderOak Hive/Amash/amash.R')
head(c1.m1)
head(ci.m1)
ci.m1.long <- reshape(ci.m1, direction="long", varying=list(names(ci.m1)[3,4]), v.names="Value", idvar=c("Party","Amount"), timevar="CI", times=c('Lower','Upper'))
ci.m1.long <- reshape(ci.m1, direction="long", varying=c('Lower','Upper'), v.names="Value", idvar=c("Party","Amount"), timevar="CI", times=c('Lower','Upper'))
head(ci.m1.long)
dim(ci.m1)
dim(ci.m1.long)
ci.m1.long.sorted <- ci.m1.long[order('Party','Amount','CI')]
head(ci.m1.long.sorted)
ci.m1.long.sorted <- ci.m1.long[order('Party','Amount','CI'),]
head(ci.m1.long.sorted)
ci.m1.long.sorted
ci.m1.long
ci.m1.long.sorted <- ci.m1.long[order(ci.m1.long$Party),]
ci.m1.long
ci.m1.long.sorted
ci.m1.long.sorted <- ci.m1.long[order(ci.m1.long$Party,ci.m1.long$Amount,ci.m1.long$CI),]
ci.m1.long.sorted
source('~/SpiderOak Hive/Amash/amash.R')
View(ci.m1)
ggplot(data=ci.m1, aes(x=Amount, y=Value, group=Amount, colour=Party)) + geom_line()
ci.m2 <- makeItLong(getCIData(m2))
source('~/SpiderOak Hive/Amash/amash.R')
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m1
ci.plot.m2
prettyNum(5000)
prettyNum(5000,big.mark=',')
}
source('~/.active-rstudio-document')
ci.plot.m1
ci.plot.m2
head(ci.m1)
head(p1.No)
head(p1.No[order(p1.No$Party),])
names(m1)
names(m1[['s.D']])
names(m1[['s.D']][[1]])
names(m1[['s.D']][[1]][['stats']])
names(m1[['s.D']][[1]][['stats']][[1]])
m1[['s.D']][[1]][['stats']][[1]]
c(m1[['s.D']][[1]][['stats']][[1]],m1[['s.D']][[1]][['stats']][[2]])
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m1
ci.plot.m2
p <- p + xlab('Funding from security and defense industry') + ylab('Predicted P(votes No)') + ggtitle(paste('95% confidence intervals for the predicted \n probabilities of a No vote by party,',mname,sep=' ')) + scale_colour_manual(values=c("red", "blue"))
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
names(df)
nrow(subset(df,Party=='R'))
nrow(subset(df,Party=='D'))
nrow(subset(df,Party=='D'))*50000+nrow(subset(df,Party=='R'))*20000
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m1
ci.plot.m2
head(ci.m2)
check.ci.m2 <- subset(ci.m2,Amount==100000)
View(check.ci.m2)
source('~/SpiderOak Hive/Amash/amash.R')
View(check.ci.m2)
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
source('~/SpiderOak Hive/Amash/amash.R')
source('~/SpiderOak Hive/Amash/amash.R')
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
head(ci.m1)
source('~/SpiderOak Hive/Amash/amash.R')
head(ci.m1)
ci.plot.m2
str(ci.m1)
ci.m1$Grouping=ci.m1$Amount+as.numeric(as.factor(ci.m1$Party))
head(ci.m1)
tail(ci.m1)
source('~/SpiderOak Hive/Amash/amash.R')
source('~/SpiderOak Hive/Amash/amash.R')
ci.plot.m2
maxd <- 200000
prettyNum(maxd,big.mark=',')
prettyNum(maxd,digits=1,big.mark=',')
prettyNum(maxd,digits=4,big.mark=',')
prettyNum(maxd,digits=8,big.mark=',')
format(maxd,digits=8,big.mark=',')
formatC(maxd,format='fg',big.mark=',')
formatC(maxd,format='fg',big.mark=',')
max(df$Amount)
df[max(df$Amount),]
df[df$Amount==max(df$Amount),]
df[df$Amount==max(subset(df,Party=='D')$Amount),]
tail(df[order(df$Amount),])
tail(df[order(df$Amount),],n=20)
tail(df[order(df$Amount),],n=10)
tail(df[order(df$Amount),],n=20)
tail(df[order(df$Amount),],n=30)
dem <- subset(df,Party=='D')
tail(dem[order(dem$Amount),],n=10)
rep <- subset(df,Party=='R')
tail(rep[order(rep$Amount),],n=10)
